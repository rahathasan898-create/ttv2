{"version":3,"file":"pane.js","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isPublishedId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n */\nfunction findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n  useStudioUrl,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {studioUrl} = useStudioUrl(window.location.origin)\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${studioUrl}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink, studioUrl],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId, useWorkspace} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  const systemStack = [\n    editState?.published?._id,\n    isDraftModelEnabled ? editState?.draft?._id : [],\n  ].flat()\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    return isDeleted\n      ? lastRevisionDocument\n      : editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description =\n    release?.state === 'published'\n      ? 'banners.published-release.description'\n      : 'banners.archived-release.description'\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type SelectedPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: SelectedPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n  } = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    workspace,\n  ])\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            data-testid=\"confirm-dialog-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            data-testid=\"confirm-dialog-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState === 'publishing' ||\n        publishState === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState === 'published' || publishState === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  isDraftId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const isDraft = displayed?._id && isDraftId(displayed?._id)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n  const showFirstActionButton = selectedReleaseId\n    ? // If the first action is a custom action and we are in a version document show it.\n      firstActionState && !isSanityDefinedAction(firstActionState)\n    : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument || editState?.published : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id):\n        version = 'version'\n        break\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {memo} from 'react'\nimport {useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  if (source.beta?.eventsAPI?.documents) {\n    return <DocumentEventsPane {...props} />\n  }\n  return <DocumentPaneWithLegacyTimelineStore {...props} />\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\n/* eslint-disable react/jsx-no-bind */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","t1","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","documentId","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","getVersionFromId","releases","release","releaseId","getReleaseIdFromReleaseDocumentId","_id","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","jsxs","jsx","Box","Text","Flex","TransferIcon","justifySelf","Button","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","findRelease","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","MenuButton","getMenuButtonProps","Menu","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","MenuItem","ReleaseAvatar","tone","getReleaseTone","Stack","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","LockIcon","text","disabled","isReleaseDocument","icon","iconRight","undefined","isPublishedId","isDraftId","find","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","t5","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t6","t7","t8","t9","t10","t11","t12","DialogProvider","t13","PortalProvider","t14","t15","t16","t17","BoundaryElementProvider","t18","ReviewChangesContext","ChangeIndicatorsTracker","VirtualizerScrollInstanceProvider","DiffViewDocument","compareValue","useCompareValue","patchChannel","perspectiveName","selectedPerspectiveName","comparisonValue","useDocumentForm","collapsedFieldSets","collapsedPaths","documentForm","formState","onBlur","onChange","onFocus","onProgrammaticFocus","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","ready","schemaType","value","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","LoadingBlock","CommentsEnabledContext","FormBuilder","focusPath","changed","focused","groups","validation","members","presence","isVersionId","compareDocumentEditState","bb0","version","createPatchChannel","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","Dialog","DiffViewDocumentLayout","toast","useToast","status","description","error","input","Fragment","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","LegacyLayerProvider","divider","Infinity","style","t19","t20","t21","t22","t23","t24","t25","t26","IsLastPaneProvider","t27","PaneContext","t28","displayName","usePane","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","MenuDivider","child","childIndex","child_0","childIndex_0","MenuGroup","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","TooltipOfDisabled","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","ContextMenuButton","nodeIndex","RootCard","PaneFooter","$border","css","Layout","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","StatusButton","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsEnabledProvider","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","studioUrl","useStudioUrl","location","origin","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","CommentsProvider","PaneRouterContext","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","reduce","acc","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","flat","releaseStack","stack","concat","position","findIndex","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","isDeleted","lastRevisionDocument","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","op","documentTitleBase","slice","documentTitle","cleanupId","closable","duration","context","Translate","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","Resizable","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","Tab","TabList","outline","JsonInspector","ignoreCase","Code","JSON","stringify","TabPanel","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isPublishedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","VersionBadge","getVersionInlineBadge","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","ComposeSparklesIcon","Heading","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","Popover","CanvasLinkedBanner","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","perspective","isPerspectiveWriteable","menuItemProps","ReleasesNav","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","VersionInlineBadge","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","Inline","Tooltip","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","Spinner","PresenceOverlay","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","StarFilledIcon","StarIcon","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","dataset","CapabilityGate","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","documentInScheduledRelease","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","banners","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","isTopLayer","useLayer","useGlobalKeyDown","borderTop","Grid","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","InsufficientPermissionsMessage","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","hasDraft","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","firstActionState","menuActionStates","buttonElement","setButtonElement","Hotkeys","marginTop","marginBottom","showFirstActionButton","isSanityDefinedAction","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","VersionChip","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","TooltipDelayGroupProvider","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","Badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","UserAvatar","AvatarStack","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","AvatarSkeleton","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","CommandList","TimelineError","versionError","TextWithTone","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","AnimatePresence","StatusText","RevisionStatusLine","RestoreIcon","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","showingRevision","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","portalElements","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","GetFormValueProvider","FieldActionsResolver","FieldActionsProvider","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","actionsPerspective","documentActionsProps","versionType","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","PerspectiveProvider","EventsProvider","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPaneProviderWrapper","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","CopyPasteProvider","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","StateLink","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","itemId","PaneComponent","Suspense","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","DocumentPreviewPresence","DocumentStatusIndicator","DocumentStatus","tooltip","getPreviewValueWithFallback","fallback","SanityDefaultPreview","ReferencePreviewLink","documentPresence","linkProps","PreviewCard","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","T0","T1","T2","normalizedDatasetNames","datasetSubtitle","datasets","DocumentsIcon","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","IntentButton","linkRef","IntentLink","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","every","nothingGranted","permissionsById","firstItem","itemIndex","disabled_0","intent_0","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","ChevronRightIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","GetHookCollectionState","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","ErrorActions","mainContent","removePublishedWithDrafts","collate","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","Checkbox","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","Select","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","SearchHeader","Filters","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","SearchProvider","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","ChangeFieldWrapper","NoChanges","ChangeList","DocumentChangeContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","Event","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","ChangesError","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t29","t30","t31","changesInspector","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}