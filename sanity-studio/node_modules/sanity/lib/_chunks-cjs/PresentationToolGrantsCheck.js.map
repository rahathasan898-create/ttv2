{"version":3,"file":"PresentationToolGrantsCheck.js","sources":["../../src/presentation/features/PostMessageFeatures.tsx","../../src/presentation/machines/presentation-machine.ts","../../src/presentation/overlays/SharedStateProvider.tsx","../../src/presentation/panels/Panel.tsx","../../src/presentation/util/debounce.ts","../../src/presentation/panels/usePanelsStorage.ts","../../src/presentation/panels/util.ts","../../src/presentation/panels/Panels.tsx","../../src/presentation/components/ErrorCard.tsx","../../src/presentation/paneRouter/ChildLink.tsx","../../src/presentation/paneRouter/ReferenceChildLink.tsx","../../src/presentation/paneRouter/PresentationPaneRouterProvider.tsx","../../src/presentation/editor/DocumentListPane.tsx","../../src/presentation/editor/DocumentPane.tsx","../../src/presentation/editor/DocumentPanel.tsx","../../src/presentation/editor/usePreviewState.ts","../../src/presentation/editor/ContentEditor.tsx","../../src/presentation/panels/usePanelId.ts","../../src/presentation/panels/PanelResizer.tsx","../../src/presentation/PresentationContent.tsx","../../src/presentation/PresentationNavigateProvider.tsx","../../src/presentation/useLocalState.ts","../../src/presentation/PresentationNavigator.tsx","../../src/presentation/PresentationParamsProvider.tsx","../../src/presentation/PresentationProvider.tsx","../../src/presentation/useAllowPatterns.ts","../../src/presentation/util/encodeStudioPerspective.ts","../../src/presentation/useId.ts","../../src/presentation/preview/IFrame.tsx","../../src/presentation/preview/OpenPreviewButton.tsx","../../src/presentation/useTargetOrigin.ts","../../src/presentation/preview/PreviewLocationInput.tsx","../../src/presentation/preview/SharePreviewMenu.tsx","../../src/presentation/preview/PreviewHeader.tsx","../../src/presentation/preview/Preview.tsx","../../src/presentation/util/warnOnce.ts","../../src/presentation/useDocumentsOnPage.ts","../../src/presentation/useMainDocument.ts","../../src/presentation/util/parse.ts","../../src/presentation/useParams.ts","../../src/presentation/usePopups.ts","../../src/presentation/usePresentationPerspective.ts","../../src/presentation/useStatus.ts","../../src/presentation/PresentationTool.tsx","../../src/presentation/actors/create-preview-secret.ts","../../src/presentation/actors/read-shared-secret.ts","../../src/presentation/actors/resolve-allow-patterns.ts","../../src/presentation/actors/resolve-initial-url.ts","../../src/presentation/actors/resolve-preview-mode.ts","../../src/presentation/actors/resolve-preview-mode-url.ts","../../src/presentation/actors/resolve-url-from-preview-search-param.ts","../../src/presentation/machines/preview-url.ts","../../src/presentation/usePreviewUrlActorRef.ts","../../src/presentation/useReportInvalidPreviewSearchParam.tsx","../../src/presentation/useVercelBypassSecret.ts","../../src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","import {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {forwardRef} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {type ChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\n\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps & {\n    childType: string\n    searchParams: PresentationSearchParams\n  },\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childType, childPayload, childParameters, searchParams, ...rest} = props\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        id: childId,\n        type: childType,\n        _searchParams: Object.entries({...searchParams, ...childParameters}),\n      }}\n    />\n  )\n})\n","import {forwardRef} from 'react'\nimport {pathToString} from 'sanity'\nimport {type ReferenceChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\nimport {ChildLink} from './ChildLink'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {documentId, documentType, parentRefPath, template, searchParams, ...rest} = props\n\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childType={documentType}\n      childPayload={template?.params}\n      childParameters={{\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n      searchParams={searchParams}\n    />\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  type ChildLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport type PresentationPaneRouterProviderProps = PropsWithChildren<{\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs?: {_id: string; _type: string}[]\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}>\n\nexport function PresentationPaneRouterProvider(\n  props: PresentationPaneRouterProviderProps,\n): React.JSX.Element {\n  const {children, onEditReference, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // oxlint-disable-next-line no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: forwardRef<HTMLAnchorElement, ChildLinkProps>(\n        function ContextChildLink(childLinkProps, ref) {\n          const {childId, ...rest} = childLinkProps\n          const doc = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n\n          if (!doc) {\n            console.warn(`ChildLink: No document found for childId \"${childId}\"`)\n            return null\n          }\n\n          return (\n            <ChildLink\n              {...rest}\n              ref={ref}\n              childId={childId}\n              childType={doc._type}\n              searchParams={searchParams}\n            />\n          )\n        },\n      ),\n      BackLink: forwardRef<HTMLAnchorElement, BackLinkProps>(\n        function ContextBackLink(backLinkProps, ref) {\n          return <BackLink {...backLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ReferenceChildLink: forwardRef<HTMLAnchorElement, ReferenceChildLinkProps>(\n        function ContextReferenceChildLink(childLinkProps, ref) {\n          return <ReferenceChildLink {...childLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        const {id, template, type, parentRefPath, version} = options\n        onEditReference({\n          state: {id, type},\n          params: {\n            template: template.id,\n            parentRefPath: pathToString(parentRefPath),\n            version,\n          },\n        })\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: onStructureParams,\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [\n    createPathWithParams,\n    onEditReference,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  ])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onEditReference, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onEditReference={onEditReference}\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      return onFocusPath({\n        id: documentId,\n        type: documentType,\n        path: studioPath.toString(path),\n      })\n    },\n    [documentId, documentType, onFocusPath],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onEditReference={onEditReference}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={handleFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // oxlint-disable-next-line no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {type CommentIntentGetter, CommentsIntentProvider, type SanityDocument} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {\n  type CombinedSearchParams,\n  type PresentationNavigate,\n  type PresentationNavigateContextValue,\n  type PresentationNavigateOptions,\n  type PresentationStateParams,\n} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document) => {\n      if (preview || document) {\n        const obj: {\n          state?: PresentationStateParams\n          params?: CombinedSearchParams\n        } = {}\n        if (preview) obj.params = {preview}\n        if (document) obj.state = document\n        // Cast because navigate expects either params or state to be defined, which we guarantee above\n        _navigate(obj as PresentationNavigateOptions)\n      }\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          // eslint-disable-next-line react/jsx-no-bind\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            // @ts-expect-error - fix typings\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // oxlint-disable-next-line no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin']\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          state: {\n            id: doc?._id,\n            type: doc?._type,\n          },\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useLayoutEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\n/**\n * Ensures the array contains all members of the union T.\n */\nconst exhaustiveTupleOf =\n  <T>() =>\n  <U extends T[]>(array: U & ([T] extends [U[number]] ? unknown : 'Invalid') & {0: T}) =>\n    array\n\nconst maintainOnDocumentChange = exhaustiveTupleOf<keyof PresentationSearchParams>()([\n  'perspective',\n  'preview',\n  'viewport',\n])\n\nconst maintainOnSameDocument = exhaustiveTupleOf<keyof StructureDocumentPaneParams>()([\n  'changesInspectorTab',\n  'comment',\n  'inspect',\n  'instruction',\n  'parentRefPath',\n  'path',\n  'pathKey',\n  'rev',\n  'since',\n  'template',\n  'templateParams',\n  'version',\n  'view',\n])\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  isSameDocument: (state: PresentationStateParams) => boolean\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      parentRefPath: routerSearchParams.parentRefPath,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      parentRefPath: params.parentRefPath,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.parentRefPath,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useLayoutEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  // Helper function to check if a given document is the same as the one in the\n  // current router state\n  const isSameDocument = useCallback(({id, type}: PresentationStateParams) => {\n    const {current} = routerStateRef\n    return id === current.id && type === current.type\n  }, [])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (options) => {\n      const {state, params, replace = false} = options\n\n      // Force navigation to use published IDs only\n      if (state?.id) state.id = getPublishedId(state.id)\n\n      // Get the current state and params\n      const {current} = routerStateRef\n      const currentState = {\n        id: current.id,\n        type: current.type,\n        path: current.path,\n      } satisfies PresentationStateParams\n      const currentParams = Object.fromEntries(current._searchParams || []) as CombinedSearchParams\n\n      // If state is provided, replace the current state with the provided\n      // state, otherwise maintain the current state\n      const nextState = state || currentState\n\n      // Different params need to be maintained under different conditions\n      const maintainedParamKeys = [\n        ...maintainOnDocumentChange,\n        ...(isSameDocument(nextState) ? maintainOnSameDocument : []),\n      ] satisfies (keyof CombinedSearchParams)[]\n\n      const maintainedParams = maintainedParamKeys.reduce((acc, key) => {\n        // @ts-expect-error changesInspectorTab union type doesn't play nicely\n        // here, if it were just a string it would be fine\n        acc[key] = currentParams[key]\n        return acc\n      }, {} as Partial<CombinedSearchParams>)\n\n      // If params are provided, merge them with the maintained params\n      const nextParams = {...maintainedParams, ...params}\n\n      const nextRouterState = {\n        ...nextState,\n        _searchParams: Object.entries(nextParams).reduce(\n          (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n          [] as SearchParam[],\n        ),\n      } satisfies RouterState\n\n      setNavigationHistory((prev) => [...prev, nextRouterState])\n      routerNavigate(nextRouterState, {replace})\n    },\n    [isSameDocument, routerNavigate],\n  )\n\n  return {\n    isSameDocument,\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {isSameDocument, navigate, navigationHistory, params, searchParams, structureParams} =\n    useParams({\n      initialPreviewUrl,\n      routerNavigate,\n      routerState,\n      routerSearchParams,\n      frameStateRef,\n    })\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<PresentationNavigate>((options) => {\n    navigate(options)\n  })\n\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        state: {\n          type: data.type,\n          id: data.id,\n          path: data.path,\n        },\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate({\n            params: {\n              preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`,\n            },\n          })\n        } catch {\n          handleNavigate({params: {preview: url}})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // oxlint-disable-next-line no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // oxlint-disable-next-line no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useMemo(\n    () =>\n      // When moving from one field to another, blur and focus events will trigger\n      // this handler. We debounce to avoid unwanted intermediate navigations this\n      // would cause.\n      debounce<(state: Required<PresentationStateParams>) => void>((state) => {\n        // We only ever want to update the path if we are still viewing the\n        // document that was active when the focus event was triggered\n        if (isSameDocument(state)) {\n          navigate({\n            state,\n            replace: true,\n          })\n        }\n      }, 0),\n    [isSameDocument, navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({params: {preview}})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({params: {preview}})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (params: StructureDocumentPaneParams) => {\n      navigate({params})\n    },\n    [navigate],\n  )\n\n  const handleEditReference = useCallback<PresentationNavigate>(\n    (options) => {\n      navigate(options)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({\n        params: {viewport},\n        replace: true,\n      })\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onEditReference={handleEditReference}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n","import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n","import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n","import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n","import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n","import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","presentationMachine","setup","types","actions","actors","guards","createMachine","id","context","url","error","visualEditingOverlaysEnabled","assign","target","states","description","tags","loading","loaded","event","enabled","idle","refreshing","reloading","initial","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","jsx","PresentationSharedStateContext","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","Button","retryButton","continueAnywayButton","Text","jsxs","Stack","Inline","Box","Flex","Container","Card","ChildLink","forwardRef","ref","childId","childParameters","childType","rest","searchParams","childPayload","Object","entries","_searchParams","StateLink","ReferenceChildLink","documentId","documentType","parentRefPath","template","params","pathToString","encodeQueryString","parts","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","PresentationPaneRouterProvider","onEditReference","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","doc","find","r","_id","getPublishedId","_type","console","warn","backLinkProps","ref_0","childLinkProps_0","ref_1","options","version","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","closeCurrent","_temp4","duplicateCurrent","_temp5","setView","_temp6","setParams","setPayload","_temp7","navigateIntent","_temp8","PaneRouterContext","intentName","intentParams","options_0","viewId","pane_0","pane","RootLayout","PaneLayout","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","Label","StructureDocumentListPane","ErrorBoundary","StructureToolProvider","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","studioPath","toString","handleFocusPath","height","PresentationSpinner","Suspense","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","SanityDefaultPreview","PreviewCard","WarningOutlineIcon","Translate","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","CommentsIntentProvider","DisplayedDocumentBroadcasterProvider","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","PresentationNavigateContext","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","name","PresentationContext","useAllowPatterns","previewUrlRef","allowPatterns","useSelector","TypeError","allowOrigins","encodeStudioPerspective","studioPerspective","useId","useReactId","startsWith","replace","IFrame","forwardedRef","animate","onLoad","preventClick","src","variants","useImperativeHandle","instance","handleBlur","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","viewTransitionName","Fragment","IFrameElement","motion","create","iframe","IFrameOverlay","GlobalViewTransition","createGlobalStyle","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","Tooltip","useTargetOrigin","previewUrl","origin","PreviewLocationInput","fontSize","onChange","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","pattern","test","reportValidity","nextValue","handleKeyDown","nextValue_0","handleClear","icon","ResetIcon","zIndex","TextInput","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","finally","MenuButton","ShareIcon","Menu","Grid","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","Switch","position","aspectRatio","display","AnimatePresence","opacity","textWrap","textAlign","MenuDivider","MenuItem","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","iframeRef","onPathChange","onRefresh","overlaysConnection","presentationRef","setViewport","toggleOverlay","viewport","toggleViewportSize","send","handleRefresh","isLoading","isLoaded","isRefreshing","isReloading","overlaysEnabled","previewURL","withoutSecretSearchParams","perspectiveToggleTooltipId","previewUrlBusy","PanelLeftIcon","content","fallbackPlacements","whiteSpace","Hotkeys","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","t30","RefreshIcon","t31","t32","t33","t34","node","setProperty","t35","t36","t37","t38","t39","t40","MobileDeviceIcon","DesktopIcon","t41","t42","t43","t44","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","matches","state_0","state_1","state_2","state_3","state_4","hasTag","MotionFlex","Preview","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","toast","checkOrigin","setCheckOrigin","reportedMismatches","Set","reportMismatchingOrigin","useEffectEvent","reportedOrigin","allow","add","duration","Infinity","usePresentationNavigate","navigateEvent","nextUrl","hash","contentWindow","createController","addTarget","createChannel","heartbeat","connectTo","createConnectionMachine","provide","createCompatibilityActors","stop","start","destroy","interval","setInterval","postMessage","domain","clearInterval","MotionConfig","TooltipDelayGroupProvider","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","urlStringToPath","parseRouterState","pruneObject","exhaustiveTupleOf","array","maintainOnDocumentChange","maintainOnSameDocument","useParams","initialPreviewUrl","routerNavigate","inspect","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","isSameDocument","currentState","currentParams","nextState","nextRouterState","usePopups","popups","setPopups","source","open","unsubs","size","source_0","closed","source_1","source_2","POPUP_CHECK_INTERVAL","unsub","usePresentationPerspective","selectedPerspectiveName","selectedReleaseId","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","DEFAULT_TOOL_NAME","unstable_header","previewMode","shareAccess","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useActorRef","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","handleNavigate","urlWithoutSearch","URLSearchParams","refreshRef","onStatus","handlePreviewPath","nextPath","handleStructureParams","frameOrigin","previewOrigin","newUrl","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","workspace","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","BoundaryElementProvider","IS_MAC","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","defineCreatePreviewSecretActor","currentUserId","fromPromise","createPreviewSecret","defineReadSharedSecretActor","defineResolveAllowPatternsActor","allowOption","input","URLPattern","maybePatterns","urlPatterns","urlPattern","defineResolveInitialUrlActor","studioBasePath","previewUrlOption","studioPreviewPerspective","previewSearchParam","defineResolvePreviewModeActor","draftMode","enable","defineResolvePreviewModeUrlActor","resolvedPreviewMode","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","resolveUrlFromPreviewSearchParamActor","previewSearchParamUrl","shareAccessSingletonDocument","schemaIdSingleton","schemaTypeSingleton","previewUrlSecretDocument","previewUrlMachine","log","_","cause","fromObservable","throwError","Promise","reject","has checked permissions","Boolean","previewAccessSharingCreatePermission","previewAccessSharingReadPermission","previewAccessSharingUpdatePermission","previewUrlSecretPermission","search param has new origin","can create preview secret","granted","has preview mode with created secret","has preview mode with share access","has preview mode without permissions","delays","expiredSecret","expiresAt","now","Date","getTime","invoke","checkPermissionName","onError","onSnapshot","checkingPermissions","always","guard","resolvingInitialUrl","onDone","output","resolvingAllowPatterns","resolvingUrlFromPreviewSearchParam","resolvingPreviewMode","reenter","success","readShareAccess","resolvePreviewUrl","after","usePreviewUrlActorRef","grantsStore","useGrantsStore","router","checkDocumentPermission","actorRef","useReportInvalidPreviewSearchParam","currentOrigin","nextOrigin","blockedOrigin","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","useReducer","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck"],"mappings":"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"}